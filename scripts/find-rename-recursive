#!/bin/bash -ef

# Filename: find-rename-recursive
# Purpose:  Recursively rename files based on find results
# Author:   Lex Sheehan
# License:  MIT

Usage() 
{
	echo "
Usage: $(basename $0) <--pattern 123> <--string ABC> <FIND_COMMAND_PARAMETERS>

Options:
	-p or --pattern: <Required> pattern of characters in file name to search for
	-s or --string:  <Required> string to replace pattern with when renaming file

Examples:
$(basename $0) --pattern '123_' --string '' -- . -type f -name \"123_*\"
$(basename $0) --pattern '123_' --string '' -- .  -type f -name \"*123*\"
$(basename $0) --pattern 123 --string ABC . -type f -name \"*123*\"
"
}	

ALL_BUT_NAME_ARG=''
Parse_arguments() 
{
	if [ "${DEBUG}" == "true" ]; then
		echo "++ $(basename $0) $@"
	fi
	
	while [ $# -gt 0 ]; do
		case $1 in
			--help)
				HELPINFO=true;;
			--pattern | -p)
				shift
				PATTERN="$1";;
			--string | -s)
				shift
				STRING="$1";;
			-name )
				shift
				NAME_ARG="$1";;
			* )
				ALL_BUT_NAME_ARG="${ALL_BUT_NAME_ARG} $1";;
		esac
		shift
	done
}
Parse_arguments $@


if [ "$#" -lt 5 ] || [ "${PATTERN}" == "" ] || [ "${STRING}" == "" ]; then
    Usage;exit 2
fi

if [ "${HELPINFO}" == "true" ]; then
    Usage;exit 0
fi

function debug
{
	[ "$DEBUG" == "true" ] && echo "$1" >&2 || true
}

# MAIN
if [ "$NAME_ARG" != "" ]; then
	NAME_ARG="-name \"${NAME_ARG}\""
fi

set +f
while read line
do
	debug "> $line"
	if [ ! -d "$line"  ] && [[ "$line" == *"/"* ]]; then
		source_dir="$(dirname $line)"
		fname="$(basename $line)"
		if [[ "${STRING/}" == "--" ]]; then
			to_fname="${fname//$PATTERN/}"
		else
			to_fname="${fname//$PATTERN/$STRING}"
		fi
		to_path="$source_dir/${to_fname}"
		if ! cmp -s "$line" "$to_path" && [ "$line" != "$to_path" ]; then
			mv "$line" "$to_path"
		fi			
	fi
done < <(eval "find ${ALL_BUT_NAME_ARG} ${NAME_ARG}") 
